(in-package :web-cl)
(defun save-article-to-db (itemid title content)
    (progn (db.use "blog")
        (db.insert "articles" (kv (kv "_id" itemid) (kv "title" title) (kv "content" content) (kv "views" 0)))))

(defun update-article-to-db (itemid title content)
    (progn (db.use "blog")
        (let ((item (car (docs  (db.iter (db.find "articles" (kv "_id" itemid)))))))
            (add-element "title" title item)
            (add-element "content" content item)
            (db.update "articles" (kv "_id" itemid) item))))

(defun get-article-from-db (itemid)
    (progn (db.use "blog")
        (let ((item (car (docs  (db.iter (db.find "articles" (kv "_id" itemid)))))))
            (values (get-element "title" item)
                (get-element "content" item)
                (get-element "views" item)))))

(defun get-articles-from-db ()
    (progn (db.use "blog")
        (loop for item in (docs (db.iter (db.find "articles" :all)))
            collect (list (cons "id" (doc-id item)) (cons "url" (concatenate 'string "/blog/articles/" (doc-id item))) (cons "title" (get-element "title" item))))))

(defun increase-view-times (itemid)
    (progn (db.use "blog")
        (let ((item (car (docs  (db.iter (db.find "articles" (kv "_id" itemid)))))))
            (progn
                (add-element "views" (+ 1 (get-element "views" item)) item)
                (db.update "articles" (kv "_id" (doc-id item)) item)))))